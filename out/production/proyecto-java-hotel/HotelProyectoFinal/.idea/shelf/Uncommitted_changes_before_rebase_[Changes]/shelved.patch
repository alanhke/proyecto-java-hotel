Index: modelos/DatosUsuario.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package HotelProyectoFinal.modelos;\r\n\r\nimport HotelProyectoFinal.utilities.MySQLConnection;\r\nimport HotelProyectoFinal.vistas.VistaModificarUsuario;\r\nimport HotelProyectoFinal.vistas.VistaRegistrarse;\r\nimport com.fasterxml.jackson.databind.JsonNode;\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\n\r\npublic class DatosUsuario {\r\n    private int id;\r\n    private String nombre;\r\n    private String apellido;\r\n    private String nombreUsuario;\r\n    private String contrasena;\r\n    private String confirmarContrasena;\r\n    private String genero1;\r\n    private String tipo;\r\n    public DatosUsuario(VistaRegistrarse vistaRegistrarse) {\r\n        nombre = vistaRegistrarse.getNombre();\r\n        apellido = vistaRegistrarse.getApellido();\r\n        nombreUsuario = vistaRegistrarse.getNombreUsuario();\r\n        contrasena = vistaRegistrarse.getPassword();\r\n        confirmarContrasena = vistaRegistrarse.getFinalPassword();\r\n        genero1 = vistaRegistrarse.getGender();\r\n        tipo = vistaRegistrarse.getOpcion();\r\n    }\r\n\r\n    public DatosUsuario(VistaModificarUsuario vistaModificarUsuario) {\r\n        nombre = vistaModificarUsuario.getNombre();\r\n        apellido = vistaModificarUsuario.getApellido();\r\n        nombreUsuario = vistaModificarUsuario.getNombreUsuario();\r\n        contrasena = vistaModificarUsuario.getPassword();\r\n        confirmarContrasena = vistaModificarUsuario.getFinalPassword();\r\n        genero1 = vistaModificarUsuario.getGender();\r\n        tipo = vistaModificarUsuario.getOpcion();\r\n    }\r\n\r\n    /*public DatosUsuario(JsonNode obj) {\r\n        this.nombre = obj.get(\"nombre\").asText();\r\n        this.apellido = obj.get(\"apellido\").asText();\r\n        this.nombreUsuario = obj.get(\"nombreUsuario\").asText();\r\n        this.contrasena = obj.get(\"contrasena\").asText();\r\n        this.confirmarContrasena = obj.get(\"confirmarContrasena\").asText();\r\n        this.genero1 = obj.get(\"genero1\").asText();\r\n        this.tipo = obj.get(\"tipo\").asText();\r\n    }*/\r\n\r\n    public DatosUsuario(int id, String nombre, String apellido, String nombreUsuario, String contrasena, String genero, String tipo) {\r\n        this.id = id;\r\n        this.nombre = nombre;\r\n        this.apellido = apellido;\r\n        this.nombreUsuario = nombreUsuario;\r\n        this.contrasena = contrasena;\r\n        this.confirmarContrasena = contrasena;\r\n        this.genero1 = genero;\r\n        this.tipo = tipo;\r\n    }\r\n\r\n    public String getNombre() {\r\n        return nombre;\r\n    }\r\n    public void setNombre(String nombre) {\r\n        this.nombre = nombre;\r\n    }\r\n    public String getApellido() {\r\n        return apellido;\r\n    }\r\n    public void setApellido(String apellido) {\r\n        this.apellido = apellido;\r\n    }\r\n    public String getNombreUsuario() {\r\n        return nombreUsuario;\r\n    }\r\n    public void setNombreUsuario(String nombreUsuario) {\r\n        this.nombreUsuario = nombreUsuario;\r\n    }\r\n    public String getContrasena() {\r\n        return contrasena;\r\n    }\r\n    public void setContrasena(String contrasena) {\r\n        this.contrasena = contrasena;\r\n    }\r\n    public String getConfirmarContrasena() {\r\n        return confirmarContrasena;\r\n    }\r\n    public void setConfirmarContrasena(String confirmarContrasena) {\r\n        this.confirmarContrasena = confirmarContrasena;\r\n    }\r\n\r\n    public String getGenero1() {\r\n        return genero1;\r\n    }\r\n\r\n    public void setGenero1(String genero1) {\r\n        this.genero1 = genero1;\r\n    }\r\n\r\n    public String getTipo() {\r\n        return tipo;\r\n    }\r\n\r\n    public void setTipo(String tipo) {\r\n        this.tipo = tipo;\r\n    }\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Nombre: \"+ nombre + \"\\nApellido: \" + apellido + \"\\nNombre de usuario: \" + nombreUsuario  + \"\\nGenero: \" + genero1 + \"\\nTipo: \" + tipo + \"\\n\";\r\n    }\r\n\r\n    public static ArrayList<DatosUsuario> obtenerUsuarios() {\r\n        ArrayList<DatosUsuario> usuarios = new ArrayList<>();\r\n        //Statement st = null;\r\n        //ResultSet rs = null;\r\n        String consulta = \"Select * from registro_usuarios\";\r\n\r\n        try (Connection con = MySQLConnection.connect();\r\n             Statement st = (Statement)con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);\r\n             ResultSet rs = st.executeQuery(consulta);\r\n        ){\r\n            while (rs.next()) {\r\n                usuarios.add(new DatosUsuario(rs.getInt(1),rs.getString(\"nombres\"), rs.getString(\"apellidos\"), rs.getString(\"nombreUsuario\"),rs.getString(\"contrasena\"),rs.getString(\"genero\"),rs.getString(\"tipo\")));\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n\r\n        return usuarios;\r\n    }\r\n\r\n    public static boolean eliminarUsu(int id){\r\n        String consulta = \"Delete from registro_usuarios where idusuarios = \" + id;\r\n        int eliminados = 0;\r\n\r\n        try (Connection con = MySQLConnection.connect();\r\n             Statement st = (Statement) con.createStatement();\r\n        ){\r\n            eliminados = st.executeUpdate(consulta);\r\n            System.out.println(eliminados);\r\n        }catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return eliminados > 0;\r\n    }\r\n\r\n    public static boolean agregarUsuario(DatosUsuario usuario){\r\n        String query = \"INSERT INTO registro_usuarios \" + \"(nombres, apellidos, nombreUsuario, contrasena, genero, tipo) \" + \"VALUES(?, ?, ?, ?, ?, ?)\";\r\n        int creados = 0;\r\n        try (Connection conexion = MySQLConnection.connect();\r\n             PreparedStatement pst = conexion.prepareStatement(query);\r\n        ){\r\n            pst.setString(1, usuario.getNombre());\r\n            pst.setString(2, usuario.getApellido());\r\n            pst.setString(3, usuario.getNombreUsuario());\r\n            pst.setString(4,usuario.getContrasena());\r\n            pst.setString(5,usuario.getGenero1());\r\n            pst.setString(6,usuario.getTipo());\r\n            creados = pst.executeUpdate();\r\n        }catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return creados > 0;\r\n    }\r\n\r\n    public static boolean actualizarUsuario(DatosUsuario usuario, int id){\r\n        String query = \"UPDATE registro_usuarios SET nombres = ?, apellidos = ?, nombreUsuario = ?, contrasena = ?, genero = ?, tipo = ? WHERE idusuarios = \" + id;\r\n        int actualizados = 0;\r\n        try (\r\n                Connection conexion = MySQLConnection.connect();\r\n                PreparedStatement pst = conexion.prepareStatement(query);\r\n        ){\r\n            pst.setString(1, usuario.getNombre());\r\n            pst.setString(2, usuario.getApellido());\r\n            pst.setString(3, usuario.getNombreUsuario());\r\n            pst.setString(4,usuario.getContrasena());\r\n            pst.setString(5,usuario.getGenero1());\r\n            pst.setString(6,usuario.getTipo());\r\n            actualizados = pst.executeUpdate();\r\n        }catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return actualizados > 0;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modelos/DatosUsuario.java b/modelos/DatosUsuario.java
--- a/modelos/DatosUsuario.java	(revision 1bbc16615528dd3ece628a3de0a52ceb7332f201)
+++ b/modelos/DatosUsuario.java	(date 1748403922058)
@@ -3,7 +3,6 @@
 import HotelProyectoFinal.utilities.MySQLConnection;
 import HotelProyectoFinal.vistas.VistaModificarUsuario;
 import HotelProyectoFinal.vistas.VistaRegistrarse;
-import com.fasterxml.jackson.databind.JsonNode;
 import java.sql.*;
 import java.util.ArrayList;
 
